- hosts: undercloud
  vars_prompt:
    - name: rhn_username
      prompt: "RHN Username?"
      private: no
    - name: rhn_password
      prompt: "RHN password?"
  tasks:
  - name: Set up some swap space
    become: yes
    shell: |
      dd if=/dev/zero of=/opt/8GB.swap bs=8192 count=1048576
      mkswap /opt/8GB.swap
      swapon /opt/8GB.swap
      echo "/opt/8GB.swap swap                                    swap    defaults 0 0" >> /etc/fstab
  - name: Set up public interface
    become: yes
    copy:
      content: | 
        NAME=eth2
        DEVICE=eth2
        ONBOOT=yes
        BOOTPROTO=static
        IPV6INIT=yes
        IPV6ADDR={{ undercloud_public_ip }}
        MTU=1450
      dest: /etc/sysconfig/network-scripts/ifcfg-eth2
  - name: Bring up public interface
    become: yes
    command: ifup eth2
  - name: Register node
    become: yes
    shell: |
      subscription-manager register --username {{ rhn_username }} --password {{Â rhn_password }}
      subscription-manager role --set="Red Hat Enterprise Linux Server"
      subscription-manager service-level --set="Self-Support"
      subscription-manager usage --set="Development/Test"
      subscription-manager attach --pool={{ pool_id }}
  - name: Set up repos
    become: yes
    shell: |
      subscription-manager repos --disable=*
      subscription-manager repos --enable=rhel-8-for-x86_64-baseos-rpms --enable=rhel-8-for-x86_64-appstream-rpms --enable=rhel-8-for-x86_64-highavailability-rpms --enable=ansible-2.8-for-rhel-8-x86_64-rpms --enable=openstack-16-for-rhel-8-x86_64-rpms --enable=fast-datapath-for-rhel-8-x86_64-rpms
  - name: Install packages
    become: yes
    yum:
      name: "{{ packages }}"
    vars:
      packages:
        - git
        - tmux
        - vim-enhanced
        - tcpdump
        - libguestfs-tools
        - patch
        - patchutils
        - createrepo_c
  - name: upgrade all packages
    become: yes
    yum:
      name: '*'
      state: latest
  - name: Install tripleo client
    become: yes
    yum:
      name: "{{ packages }}"
    vars:
      packages:
        - python3-tripleoclient
  - name: Git checkout testing repo
    git:
      repo: https://github.com/hjensas/ooo-ipv6-rhel8-testing.git
      dest: "{{ ansible_env.HOME }}/ooo-ipv6-rhel8-testing"
  - name: Create symlinks
    file:
      src: "{{ ansible_env.HOME }}/ooo-ipv6-rhel8-testing/{{ item }}"
      dest: "{{ ansible_env.HOME }}/{{ item }}"
      state: link
    with_items:
      - overcloud
      - undercloud.conf
      - set_capabilities.sh
      - ipv6-patches.sh
      - ipv6-image-patches.sh
  - name: Create images directory
    file:
      dest: "{{ ansible_env.HOME }}/images"
      state: directory
  - name: Install overcloud images from rpm
    become: yes
    yum:
      name: rhosp-director-images-x86_64
  - name: Copy images
    shell: |
      tar -xf /usr/share/rhosp-director-images/overcloud-full-16.0-20200226.1.el8ost.x86_64.tar -C {{ ansible_env.HOME }}/images
      tar -xf /usr/share/rhosp-director-images/ironic-python-agent-16.0-20200226.1.el8ost.x86_64.tar -C {{ ansible_env.HOME }}/images
  - name: Run script to patch stuff
    become: yes
    shell: |
      bash {{ ansible_env.HOME }}/ipv6-patches.sh
  - name: Create local repo directory
    become: yes
    file:
      dest: /opt/local_repo
      state: directory
  - name: Copy rpms to local_repo
    become: yes
    file:
      dest: "/opt/local_repo/"
      src: "/home/hjensas/local_repo/{{ item }}"
    with_items:
      - dnsmasq-2.79-11.el8.x86_64.rpm
      - dnsmasq-utils-2.79-11.el8.x86_64.rpm
      - cloud-init-18.5-5.el8_1.eterrell202003061044.noarch.rpm
  - name: Create Repo
    become: yes
    shell: |
      cd /opt/local_repo
      createrepo_c
  - name: Create simplehttpserver
    become: yes
    copy:
      content: |
        import socket
        import http.server

        Handler = http.server.SimpleHTTPRequestHandler

        class HTTPServerV6(http.server.HTTPServer):
            address_family = socket.AF_INET6

        def main():
            server = HTTPServerV6(('::1', 8000), Handler)
            server.serve_forever()

        if __name__ == '__main__':
            main()
      dest: /usr/local/bin/simplehttpserver.py
  - name: Create systemd unit for simplehttpserver
    copy:
      content: |
        [Unit]
        Description=Python SimpleHTTP Server
        After=syslog.target network.target
        
        [Service]
        Type=simple
        Restart=always
        RestartSec=10
        User=root
        WorkingDirectory=/opt/local_repo
        ExecStart=/usr/local/bin/simplehttpserver.py
        
        [Install]
        WantedBy=multi-user.target
      dest: /etc/systemd/system/simplehttpserver.service
  - name: systemctl daemon-reload
    systemd:
      daemon_reload: yes
  - name: Start simplehttpserver service
    systemd:
      name: simplehttpserver
      enabled: yes
      state: started
  - name: create yum repo
    copy:
      content: |
        [local-repo]
        name=local-repo
        gpgcheck=0
        enabled=1
        baseurl=http://[::1]:8000/
      dest: /etc/yum.repos.d/local_repo.repo
  - name: Install Undercloud
    shell: |
      openstack tripleo container image prepare default --local-push-destination --output-env-file {{ ansible_env.HOME }}/containers-prepare-parameter.yaml
      cat << EOF >> {{ ansible_env.HOME }}/containers-prepare-parameter.yaml
          modify_role: tripleo-modify-image
          modify_append_tag: "-updated"
          modify_vars:
            tasks_from: yum_update.yml
            compare_host_packages: true
            yum_repos_dir_path: /etc/yum.repos.d
            update_repo: local-repo
      EOF
      openstack undercloud install
  - name: Run script to patch image
    become: yes
    shell: |
      bash {{ ansible_env.HOME }}/ipv6-image-patches.sh
  - name: Upload overcloud images
    shell: |
      source {{ ansible_env.HOME }}/stackrc
      cd {{ ansible_env.HOME }}/images
      openstack overcloud image upload
  - name: Import nodes
    shell: |
      source {{ ansible_env.HOME }}/stackrc
      openstack overcloud node import instackenv.json
  - name: Introspect and provide nodes
    shell: |
      source {{ ansible_env.HOME }}/stackrc
      openstack overcloud node introspect --all-manageable --provide
  - name: Create flavors and set node capabilities
    shell: |
      source {{ ansible_env.HOME }}/stackrc
      bash {{ ansible_env.HOME }}/set_capabilities.sh

